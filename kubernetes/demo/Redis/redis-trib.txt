安装：

kubectl run -it ubuntu --image=ubuntu:xenial --restart=Never -n redis-cluster -- bash

root@ubuntu:/# cat > /etc/apt/sources.list << EOF
deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted
deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted
deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial universe
deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates universe
deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial multiverse
deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates multiverse
deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse
deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted
deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security universe
deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security multiverse
EOF

root@ubuntu:/# apt-get update

root@ubuntu:/# apt-get install -y libncursesw5 libreadline6 libtinfo5 --allow-remove-essential

root@ubuntu:/# apt-get install -y libpython2.7-stdlib python2.7 python-pip redis-tools dnsutils

root@ubuntu:/# wget https://bootstrap.pypa.io/pip/2.7/get-pip.py

root@ubuntu:/# python get-pip.py

root@ubuntu:/# /usr/local/bin/pip install redis-trib==0.5.1

初始化集群：

root@ubuntu:/# redis-trib.py create \
  `dig +short redis-0.redis.redis-cluster.svc.cluster.local`:6379 \
  `dig +short redis-1.redis.redis-cluster.svc.cluster.local`:6379 \
  `dig +short redis-2.redis.redis-cluster.svc.cluster.local`:6379
  
root@ubuntu:/# redis-trib.py replicate \
  --master-addr `dig +short redis-0.redis.redis-cluster.svc.cluster.local`:6379 \
  --slave-addr `dig +short redis-3.redis.redis-cluster.svc.cluster.local`:6379

root@ubuntu:/# redis-trib.py replicate \
  --master-addr `dig +short redis-1.redis.redis-cluster.svc.cluster.local`:6379 \
  --slave-addr `dig +short redis-4.redis.redis-cluster.svc.cluster.local`:6379

root@ubuntu:/# redis-trib.py replicate \
  --master-addr `dig +short redis-2.redis.redis-cluster.svc.cluster.local`:6379 \
  --slave-addr `dig +short redis-5.redis.redis-cluster.svc.cluster.local`:6379
  
root@ubuntu:/# exit

查看集群：

kubectl exec -it -n redis-cluster redis-0 -- bash

root@redis-0:/data# redis-cli -c

127.0.0.1:6379> CLUSTER NODES               #列出节点信息

aac2b3d320da67eedf3512ed0e38a1cdce5bc8fe 172.10.2.55:6379@16379 slave 7c4d60cf32685484ea6c5cb4493a937dfbf6b8a5 0 1592276224727 3 connected
2efad514b2f3c7fe4530dd6dc63c0df8ffdb793d 172.10.2.54:6379@16379 master - 0 1592276224224 1 connected 0-5461
524f03526a4b683d7d4de19296431810bfdc22cf 172.10.3.60:6379@16379 slave df5bc3c2e2851d63cdb9f762efde6e1b0d38efed 0 1592276223117 5 connected
7c4d60cf32685484ea6c5cb4493a937dfbf6b8a5 172.10.4.77:6379@16379 myself,master - 0 1592276224000 2 connected 5462-10922
df5bc3c2e2851d63cdb9f762efde6e1b0d38efed 172.10.3.59:6379@16379 master - 0 1592276223217 0 connected 10923-16383
c1dbaaef4a583e372c43eed52c22cd9ad7184d18 172.10.4.78:6379@16379 slave 2efad514b2f3c7fe4530dd6dc63c0df8ffdb793d 0 1592276223719 4 connected

127.0.0.1:6379> CLUSTER INFO                #集群状态

cluster_state:ok
cluster_slots_assigned:16384
cluster_slots_ok:16384
cluster_slots_pfail:0
cluster_slots_fail:0
cluster_known_nodes:6
cluster_size:3
cluster_current_epoch:5
cluster_my_epoch:2
cluster_stats_messages_ping_sent:514
cluster_stats_messages_pong_sent:491
cluster_stats_messages_meet_sent:2
cluster_stats_messages_sent:1007
cluster_stats_messages_ping_received:491
cluster_stats_messages_pong_received:516
cluster_stats_messages_received:1007

127.0.0.1:6379> SET key1 aaa
-> Redirected to slot [9189] located at 10.244.107.134:6379
OK
10.244.107.134:6379> SET key2 bbb
-> Redirected to slot [4998] located at 10.244.107.135:6379
OK
10.244.107.135:6379> SET key3 ccc
OK
10.244.107.135:6379> exit

root@redis-0:/data# exit
exit

[root@kbadmmaster1 Redis]# kubectl exec -it -n redis-cluster redis-4 -- bash
root@redis-4:/data# redis-cli -c
127.0.0.1:6379> GET key1
-> Redirected to slot [9189] located at 10.244.107.134:6379
"aaa"
10.244.107.134:6379> GET key2
-> Redirected to slot [4998] located at 10.244.107.135:6379
"bbb"
10.244.107.135:6379> GET key3
"ccc"
10.244.107.135:6379>

10.244.107.135:6379> exit
root@redis-4:/data# exit
exit

可以看出redis cluster集群是去中心化的，每个节点都是平等的，连接哪个节点都可以获取和设置数据。

主从切换：

[root@kbadmmaster1 Redis]# kubectl get pod -n redis-cluster -o wide
NAME      READY   STATUS      RESTARTS   AGE   IP               NODE         NOMINATED NODE   READINESS GATES
redis-0   1/1     Running     0          86m   10.244.107.133   kbadmnode1   <none>           <none>
redis-1   1/1     Running     0          79m   10.244.107.134   kbadmnode1   <none>           <none>
redis-2   1/1     Running     0          79m   10.244.107.135   kbadmnode1   <none>           <none>
redis-3   1/1     Running     0          79m   10.244.107.136   kbadmnode1   <none>           <none>
redis-4   1/1     Running     0          79m   10.244.107.137   kbadmnode1   <none>           <none>
redis-5   1/1     Running     0          78m   10.244.107.138   kbadmnode1   <none>           <none>
ubuntu    0/1     Completed   0          39m   10.244.107.140   kbadmnode1   <none>           <none>

[root@kbadmmaster1 Redis]# kubectl exec -it -n redis-cluster redis-2 -- bash
root@redis-2:/data# redis-cli -c
127.0.0.1:6379> ROLE
1) "master"
2) (integer) 1165
3) 1) 1) "10.244.107.138"
      2) "6379"
      3) "1165"
127.0.0.1:6379> exit
root@redis-2:/data# exit
exit
You have mail in /var/spool/mail/root
[root@kbadmmaster1 Redis]# kubectl delete pod -n redis-cluster redis-2
pod "redis-2" deleted
[root@kbadmmaster1 Redis]# kubectl get pod -n redis-cluster redis-2 -o wide
NAME      READY   STATUS    RESTARTS   AGE   IP               NODE         NOMINATED NODE   READINESS GATES
redis-2   1/1     Running   0          18s   10.244.107.141   kbadmnode1   <none>           <none>

[root@kbadmmaster1 ~]# kubectl exec -it -n redis-cluster redis-2 -- bash
root@redis-2:/data# redis-cli -c
127.0.0.1:6379> ROLE
1) "slave"
2) "10.244.107.138"
3) (integer) 6379
4) "connected"
5) (integer) 1445
127.0.0.1:6379> exit
root@redis-2:/data# exit
exit


[root@kbadmmaster1 Redis]# kubectl delete pod -n redis-cluster redis-5

