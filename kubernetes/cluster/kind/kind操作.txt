# 安装docker desktop
Use the WSL 2 based engine

# 关于docker和vm不兼容
使用vm时：
1. 关闭HPV
2. 使用管理员powshell输入命令：bcdedit /set hypervisorlaunchtype off
3. 重启

使用docker时：
1. 打开HPV（window功能中的Hyper -v 勾选）
2. 使用管理员powshell输入命令：bcdedit /set hypervisorlaunchtype auto
3. 重启

# kind安装
https://kind.sigs.k8s.io/docs/
# Windows 10
PS C:\Users\ThinkPad> set GO111MODULE="on" 
PS C:\Users\ThinkPad> go get sigs.k8s.io/kind@v0.11.1

# kind操作集群
kind create cluster --image kindest/node:1.23.3 --name kind-kind
kubectl cluster-info --context kind-kind
kind delete cluster
# 或者使用配置文件启动集群
kind create cluster --config kind-example-config.yaml --image kindest/node:1.23.3

# 检查一下所有可用的上下文
kubectl config get-contexts
kubectl config set-context kind-kind

# kind导入本地docker镜像
kind load docker-image busybox:1.34.0
kind load image-archive my-image-archive.tar

# kubectl用法和kubeadm一样

# 注意
1. don't use a :latest tag
2. specify imagePullPolicy: IfNotPresent or imagePullPolicy: Never on your container(s)

# 配置资源限制，修改后重启docker(即重启wsl)
# 创建C:\Users\ThinkPad\.wslconfig文件
[wsl2]
memory=8GB
processors=4
swap=0
localhostForwarding=true

# 关闭window sub linux
wsl --shutdown

# 安装ingress controller
1. 创建集群：启用extraPortMappings和node-labels
cat <<EOF | kind create cluster --config=-
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
  kubeadmConfigPatches:
  - |
    kind: InitConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "ingress-ready=true"
  extraPortMappings:
  - containerPort: 80
    hostPort: 80
    protocol: TCP
  - containerPort: 443
    hostPort: 443
    protocol: TCP
EOF

或者使用配置文件启动集群
kind create cluster --config kind-example-config.yaml

2. 安装ingress controller
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml